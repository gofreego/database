// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	sql "github.com/gofreego/database/sql"
	mock "github.com/stretchr/testify/mock"
)

// SPResult is an autogenerated mock type for the SPResult type
type SPResult struct {
	mock.Mock
}

// Scan provides a mock function with given fields: row
func (_m *SPResult) Scan(row sql.Row) error {
	ret := _m.Called(row)

	if len(ret) == 0 {
		panic("no return value specified for Scan")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(sql.Row) error); ok {
		r0 = rf(row)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSPResult creates a new instance of SPResult. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSPResult(t interface {
	mock.TestingT
	Cleanup(func())
}) *SPResult {
	mock := &SPResult{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
